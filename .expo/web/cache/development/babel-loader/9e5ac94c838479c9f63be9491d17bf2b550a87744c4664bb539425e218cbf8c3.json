{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport { useFonts } from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport { NavigationContainer, DefaultTheme } from '@react-navigation/native';\nimport Menu from \"./Menu\";\nimport { useData, ThemeProvider, TranslationProvider } from \"../hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (function () {\n  var _useData = useData(),\n    theme = _useData.theme,\n    setTheme = _useData.setTheme;\n  var _useFonts = useFonts({\n      'OpenSans-Light': theme.assets.OpenSansLight,\n      'OpenSans-Regular': theme.assets.OpenSansRegular,\n      'OpenSans-SemiBold': theme.assets.OpenSansSemiBold,\n      'OpenSans-ExtraBold': theme.assets.OpenSansExtraBold,\n      'OpenSans-Bold': theme.assets.OpenSansBold\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n  var navigationTheme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n      border: 'rgba(0,0,0,0)',\n      text: String(theme.colors.text),\n      card: String(theme.colors.card),\n      primary: String(theme.colors.primary),\n      notification: String(theme.colors.primary),\n      background: String(theme.colors.background)\n    })\n  });\n  return _jsx(TranslationProvider, {\n    children: _jsx(ThemeProvider, {\n      theme: theme,\n      setTheme: setTheme,\n      children: _jsx(NavigationContainer, {\n        theme: navigationTheme,\n        children: _jsx(Menu, {})\n      })\n    })\n  });\n});","map":{"version":3,"names":["React","useFonts","AppLoading","NavigationContainer","DefaultTheme","Menu","useData","ThemeProvider","TranslationProvider","jsx","_jsx","_useData","theme","setTheme","_useFonts","assets","OpenSansLight","OpenSansRegular","OpenSansSemiBold","OpenSansExtraBold","OpenSansBold","_useFonts2","_slicedToArray","fontsLoaded","navigationTheme","_objectSpread","colors","border","text","String","card","primary","notification","background","children"],"sources":["/Users/felipebassi/Documents/VAR-Labs-App/Behrend-Immersive-App/src/navigation/App.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {Platform, StatusBar} from 'react-native';\nimport {useFonts} from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport {NavigationContainer, DefaultTheme} from '@react-navigation/native';\n\nimport Menu from './Menu';\nimport {useData, ThemeProvider, TranslationProvider} from '../hooks';\n\nexport default () => {\n  const {theme, setTheme} = useData();\n\n  // load custom fonts\n  const [fontsLoaded] = useFonts({\n    'OpenSans-Light': theme.assets.OpenSansLight,\n    'OpenSans-Regular': theme.assets.OpenSansRegular,\n    'OpenSans-SemiBold': theme.assets.OpenSansSemiBold,\n    'OpenSans-ExtraBold': theme.assets.OpenSansExtraBold,\n    'OpenSans-Bold': theme.assets.OpenSansBold,\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  }\n\n  const navigationTheme = {\n    ...DefaultTheme,\n    colors: {\n      ...DefaultTheme.colors,\n      border: 'rgba(0,0,0,0)',\n      text: String(theme.colors.text),\n      card: String(theme.colors.card),\n      primary: String(theme.colors.primary),\n      notification: String(theme.colors.primary),\n      background: String(theme.colors.background),\n    },\n  };\n\n  return (\n    <TranslationProvider>\n      <ThemeProvider theme={theme} setTheme={setTheme}>\n        <NavigationContainer theme={navigationTheme}>\n          <Menu />\n        </NavigationContainer>\n      </ThemeProvider>\n    </TranslationProvider>\n  );\n};\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAmB,OAAO;AAEtC,SAAQC,QAAQ,QAAO,WAAW;AAClC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAAQC,mBAAmB,EAAEC,YAAY,QAAO,0BAA0B;AAE1E,OAAOC,IAAI;AACX,SAAQC,OAAO,EAAEC,aAAa,EAAEC,mBAAmB;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAErE,gBAAe,YAAM;EACnB,IAAAC,QAAA,GAA0BL,OAAO,CAAC,CAAC;IAA5BM,KAAK,GAAAD,QAAA,CAALC,KAAK;IAAEC,QAAQ,GAAAF,QAAA,CAARE,QAAQ;EAGtB,IAAAC,SAAA,GAAsBb,QAAQ,CAAC;MAC7B,gBAAgB,EAAEW,KAAK,CAACG,MAAM,CAACC,aAAa;MAC5C,kBAAkB,EAAEJ,KAAK,CAACG,MAAM,CAACE,eAAe;MAChD,mBAAmB,EAAEL,KAAK,CAACG,MAAM,CAACG,gBAAgB;MAClD,oBAAoB,EAAEN,KAAK,CAACG,MAAM,CAACI,iBAAiB;MACpD,eAAe,EAAEP,KAAK,CAACG,MAAM,CAACK;IAChC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAR,SAAA;IANKS,WAAW,GAAAF,UAAA;EAQlB,IAAI,CAACE,WAAW,EAAE;IAChB,OAAOb,IAAA,CAACR,UAAU,IAAE,CAAC;EACvB;EAEA,IAAMsB,eAAe,GAAAC,aAAA,CAAAA,aAAA,KAChBrB,YAAY;IACfsB,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACDrB,YAAY,CAACsB,MAAM;MACtBC,MAAM,EAAE,eAAe;MACvBC,IAAI,EAAEC,MAAM,CAACjB,KAAK,CAACc,MAAM,CAACE,IAAI,CAAC;MAC/BE,IAAI,EAAED,MAAM,CAACjB,KAAK,CAACc,MAAM,CAACI,IAAI,CAAC;MAC/BC,OAAO,EAAEF,MAAM,CAACjB,KAAK,CAACc,MAAM,CAACK,OAAO,CAAC;MACrCC,YAAY,EAAEH,MAAM,CAACjB,KAAK,CAACc,MAAM,CAACK,OAAO,CAAC;MAC1CE,UAAU,EAAEJ,MAAM,CAACjB,KAAK,CAACc,MAAM,CAACO,UAAU;IAAC;EAC5C,EACF;EAED,OACEvB,IAAA,CAACF,mBAAmB;IAAA0B,QAAA,EAClBxB,IAAA,CAACH,aAAa;MAACK,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA,QAAS;MAAAqB,QAAA,EAC9CxB,IAAA,CAACP,mBAAmB;QAACS,KAAK,EAAEY,eAAgB;QAAAU,QAAA,EAC1CxB,IAAA,CAACL,IAAI,IAAE;MAAC,CACW;IAAC,CACT;EAAC,CACG,CAAC;AAE1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}