{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { DESCRIPTION } from \"../constants/mocks\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Description = function Description(_ref) {\n  var route = _ref.route;\n  var id = route.params.id;\n  var description = DESCRIPTION.find(function (desc) {\n    return desc.id === id;\n  });\n  if (!description) {\n    return _jsxs(Text, {\n      children: [\"No description found for ID \", id]\n    });\n  }\n  var title = description.title,\n    image = description.image,\n    desc = description.description;\n  return _jsxs(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: title\n    }), _jsx(View, {\n      style: styles.imageContainer,\n      children: _jsx(Image, {\n        source: {\n          uri: image[0]\n        },\n        style: styles.image\n      })\n    }), _jsx(Text, {\n      style: styles.description,\n      children: desc\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 16\n  },\n  imageContainer: {\n    height: 200,\n    marginBottom: 16\n  },\n  image: {\n    flex: 1,\n    height: '100%',\n    resizeMode: 'cover'\n  },\n  description: {\n    color: '#000',\n    fontSize: 16\n  }\n});\nexport default Description;","map":{"version":3,"names":["React","StyleSheet","View","Text","Image","ScrollView","DESCRIPTION","jsxs","_jsxs","jsx","_jsx","Description","_ref","route","id","params","description","find","desc","children","title","image","contentContainerStyle","styles","container","style","imageContainer","source","uri","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","height","resizeMode","color"],"sources":["/Users/felipebassi/Documents/VAR-Labs-App/Behrend-Immersive-App/src/screens/Description.tsx"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, Image, ScrollView } from 'react-native';\nimport { IDescription } from '../constants/types';\nimport { DESCRIPTION } from '../constants/mocks';\n\ntype DescriptionProps = {\n  route: {\n    params: {\n      id: number;\n    };\n  };\n};\n\nconst Description: React.FC<DescriptionProps> = ({ route }) => {\n  const { id } = route.params;\n  const description: IDescription | undefined = DESCRIPTION.find(\n    (desc) => desc.id === id\n  );\n\n  if (!description) {\n    return <Text>No description found for ID {id}</Text>;\n  }\n\n  const { title, image, description: desc } = description;\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.title}>{title}</Text>\n      <View style={styles.imageContainer}>\n        <Image source={{ uri: image[0] }} style={styles.image} />\n      </View>\n      <Text style={styles.description}>{desc}</Text>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n  imageContainer: {\n    height: 200,\n    marginBottom: 16,\n  },\n  image: {\n    flex: 1,\n    height: '100%',\n    resizeMode: 'cover',\n  },\n  description: {\n    color: '#000',\n    fontSize: 16,\n  },\n});\n\nexport default Description;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAG1B,SAASC,WAAW;AAA6B,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAUjD,IAAMC,WAAuC,GAAG,SAA1CA,WAAuCA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACtD,IAAQC,EAAE,GAAKD,KAAK,CAACE,MAAM,CAAnBD,EAAE;EACV,IAAME,WAAqC,GAAGV,WAAW,CAACW,IAAI,CAC5D,UAACC,IAAI;IAAA,OAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE;EAAA,CAC1B,CAAC;EAED,IAAI,CAACE,WAAW,EAAE;IAChB,OAAOR,KAAA,CAACL,IAAI;MAAAgB,QAAA,GAAC,8BAA4B,EAACL,EAAE;IAAA,CAAO,CAAC;EACtD;EAEA,IAAQM,KAAK,GAA+BJ,WAAW,CAA/CI,KAAK;IAAEC,KAAK,GAAwBL,WAAW,CAAxCK,KAAK;IAAeH,IAAI,GAAKF,WAAW,CAAjCA,WAAW;EAEjC,OACER,KAAA,CAACH,UAAU;IAACiB,qBAAqB,EAAEC,MAAM,CAACC,SAAU;IAAAL,QAAA,GAClDT,IAAA,CAACP,IAAI;MAACsB,KAAK,EAAEF,MAAM,CAACH,KAAM;MAAAD,QAAA,EAAEC;IAAK,CAAO,CAAC,EACzCV,IAAA,CAACR,IAAI;MAACuB,KAAK,EAAEF,MAAM,CAACG,cAAe;MAAAP,QAAA,EACjCT,IAAA,CAACN,KAAK;QAACuB,MAAM,EAAE;UAAEC,GAAG,EAAEP,KAAK,CAAC,CAAC;QAAE,CAAE;QAACI,KAAK,EAAEF,MAAM,CAACF;MAAM,CAAE;IAAC,CACrD,CAAC,EACPX,IAAA,CAACP,IAAI;MAACsB,KAAK,EAAEF,MAAM,CAACP,WAAY;MAAAG,QAAA,EAAED;IAAI,CAAO,CAAC;EAAA,CACpC,CAAC;AAEjB,CAAC;AAED,IAAMK,MAAM,GAAGtB,UAAU,CAAC4B,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE;EACnB,CAAC;EACDZ,KAAK,EAAE;IACLa,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDT,cAAc,EAAE;IACdU,MAAM,EAAE,GAAG;IACXD,YAAY,EAAE;EAChB,CAAC;EACDd,KAAK,EAAE;IACLS,IAAI,EAAE,CAAC;IACPM,MAAM,EAAE,MAAM;IACdC,UAAU,EAAE;EACd,CAAC;EACDrB,WAAW,EAAE;IACXsB,KAAK,EAAE,MAAM;IACbL,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAetB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}