{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useTheme, useTranslation } from \"../hooks/\";\nimport { Block, Text, Image } from \"../components\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Product = function Product(_ref) {\n  var id = _ref.id,\n    image = _ref.image,\n    title = _ref.title,\n    type = _ref.type,\n    linkLabel = _ref.linkLabel;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useTheme = useTheme(),\n    assets = _useTheme.assets,\n    colors = _useTheme.colors,\n    sizes = _useTheme.sizes;\n  var navigation = useNavigation();\n  var isHorizontal = type !== 'vertical';\n  var CARD_WIDTH = (sizes.width - sizes.padding * 2 - sizes.sm) / 2;\n  var onPress = function onPress() {\n    if (id === 1) {\n      navigation.navigate('Maps');\n    } else if (id === 2) {\n      navigation.navigate('AR Gallery');\n    } else if (id === 3) {\n      navigation.navigate('History');\n    } else if (id === 4) {\n      navigation.navigate('Objects');\n    } else if (id === 5) {\n      navigation.navigate('About');\n    }\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    children: _jsxs(Block, {\n      card: true,\n      flex: 0,\n      row: isHorizontal,\n      marginBottom: sizes.sm,\n      width: isHorizontal ? CARD_WIDTH * 2 + sizes.sm : CARD_WIDTH,\n      children: [_jsx(Image, {\n        resizeMode: \"cover\",\n        source: {\n          uri: image\n        },\n        style: {\n          height: isHorizontal ? '100%' : sizes.height / 2.435,\n          width: !isHorizontal ? '100%' : sizes.width / 2.435\n        }\n      }), _jsxs(Block, {\n        paddingTop: sizes.s,\n        justify: \"space-between\",\n        paddingLeft: isHorizontal ? sizes.sm : 0,\n        paddingBottom: isHorizontal ? sizes.s : 0,\n        children: [_jsx(Text, {\n          p: true,\n          marginBottom: sizes.s,\n          children: title\n        }), _jsxs(Block, {\n          row: true,\n          flex: 0,\n          align: \"center\",\n          children: [_jsx(Text, {\n            p: true,\n            color: colors.link,\n            semibold: true,\n            size: sizes.linkSize,\n            marginRight: sizes.s,\n            children: linkLabel\n          }), _jsx(Image, {\n            source: assets.arrow,\n            color: colors.link\n          })]\n        })]\n      })]\n    })\n  });\n};\nexport default Product;","map":{"version":3,"names":["React","TouchableOpacity","useTheme","useTranslation","Block","Text","Image","useNavigation","jsx","_jsx","jsxs","_jsxs","Product","_ref","id","image","title","type","linkLabel","_useTranslation","t","_useTheme","assets","colors","sizes","navigation","isHorizontal","CARD_WIDTH","width","padding","sm","onPress","navigate","children","card","flex","row","marginBottom","resizeMode","source","uri","style","height","paddingTop","s","justify","paddingLeft","paddingBottom","p","align","color","link","semibold","size","linkSize","marginRight","arrow"],"sources":["/Users/felipebassi/Documents/VAR-Labs-App/Behrend-Immersive-App/src/components/Product.tsx"],"sourcesContent":["import React from 'react';\nimport {TouchableOpacity} from 'react-native';\nimport {IProduct} from '../constants/types';\nimport {useTheme, useTranslation} from '../hooks/';\nimport {Block, Text, Image} from '../components';\nimport { useNavigation } from '@react-navigation/native';\n\nconst Product = ({ id, image, title, type, linkLabel }: IProduct) => {\n  const { t } = useTranslation();\n  const { assets, colors, sizes } = useTheme();\n  const navigation = useNavigation();\n\n  const isHorizontal = type !== 'vertical';\n  const CARD_WIDTH = (sizes.width - sizes.padding * 2 - sizes.sm) / 2;\n\n  const onPress = () => {\n    if (id === 1) {\n      navigation.navigate('Maps');\n    } else if (id === 2) {\n      navigation.navigate('AR Gallery');\n    } else if (id === 3) {\n      navigation.navigate('History');\n    } else if (id === 4) {\n      navigation.navigate('Objects');\n    } else if (id === 5) {\n      navigation.navigate('About');\n    }\n  };\n\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <Block\n        card\n        flex={0}\n        row={isHorizontal}\n        marginBottom={sizes.sm}\n        width={isHorizontal ? CARD_WIDTH * 2 + sizes.sm : CARD_WIDTH}>\n        <Image\n          resizeMode=\"cover\"\n          source={{ uri: image }}\n          style={{\n            height: isHorizontal ? '100%' : sizes.height / 2.435,\n            width: !isHorizontal ? '100%' : sizes.width / 2.435,\n          }}\n        />\n        <Block\n          paddingTop={sizes.s}\n          justify=\"space-between\"\n          paddingLeft={isHorizontal ? sizes.sm : 0}\n          paddingBottom={isHorizontal ? sizes.s : 0}>\n          <Text p marginBottom={sizes.s}>\n            {title}\n          </Text>\n          <Block row flex={0} align=\"center\">\n            <Text\n              p\n              color={colors.link}\n              semibold\n              size={sizes.linkSize}\n              marginRight={sizes.s}>\n              {linkLabel}\n            </Text>\n            <Image source={assets.arrow} color={colors.link} />\n          </Block>\n        </Block>\n      </Block>\n    </TouchableOpacity>\n  );\n};\n\nexport default Product;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}