{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { OBJECTS } from \"../constants/mocks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Objects = function Objects() {\n  var renderObjects = function renderObjects() {\n    return OBJECTS.map(function (object) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          var _object$link;\n          return Linking.openURL((_object$link = object.link) != null ? _object$link : '');\n        },\n        children: _jsx(ImageBackground, {\n          source: {\n            uri: object.imageURL\n          },\n          style: styles.box,\n          children: _jsxs(View, {\n            style: styles.textContainer,\n            children: [_jsx(Text, {\n              style: styles.title,\n              children: object.title\n            }), _jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: object.linkLabel\n              })\n            })]\n          })\n        })\n      }, object.id);\n    });\n  };\n  return _jsx(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: renderObjects()\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10\n  },\n  box: {\n    height: 200,\n    borderRadius: 10,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 3\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    backgroundColor: 'rgba(0,0,0,0.4)',\n    padding: 10,\n    borderRadius: 10\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  buttonContainer: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#007AFF'\n  }\n});\nexport default Objects;","map":{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","TouchableOpacity","Linking","ImageBackground","OBJECTS","jsx","_jsx","jsxs","_jsxs","Objects","renderObjects","map","object","onPress","_object$link","openURL","link","children","source","uri","imageURL","style","styles","box","textContainer","title","buttonContainer","buttonText","linkLabel","id","contentContainerStyle","container","create","padding","height","borderRadius","marginBottom","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","elevation","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","color","alignSelf","paddingVertical","paddingHorizontal"],"sources":["/Users/felipebassi/Documents/VAR-Labs-App/Behrend-Immersive-App/src/screens/Objects.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Linking, ImageBackground } from 'react-native';\nimport { IObjects } from '../constants/types';\nimport { OBJECTS } from '../constants/mocks';\n\nconst Objects: React.FC = () => {\n  const renderObjects = () => {\n    return OBJECTS.map((object: IObjects) => {\n      return (\n        <TouchableOpacity key={object.id} onPress={() => Linking.openURL(object.link ??'')}>\n          <ImageBackground source={{ uri: object.imageURL }} style={styles.box}>\n            <View style={styles.textContainer}>\n              <Text style={styles.title}>{object.title}</Text>\n              <View style={styles.buttonContainer}>\n                <Text style={styles.buttonText}>{object.linkLabel}</Text>\n              </View>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n      );\n    });\n  };\n\n  return <ScrollView contentContainerStyle={styles.container}>{renderObjects()}</ScrollView>;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 10,\n  },\n  box: {\n    height: 200,\n    borderRadius: 10,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    backgroundColor: 'rgba(0,0,0,0.4)',\n    padding: 10,\n    borderRadius: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  buttonContainer: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#007AFF',\n  },\n});\n\nexport default Objects;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,OAAA;AAAA,OAAAC,eAAA;AAG1B,SAASC,OAAO;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,OAAiB,GAAG,SAApBA,OAAiBA,CAAA,EAAS;EAC9B,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1B,OAAON,OAAO,CAACO,GAAG,CAAC,UAACC,MAAgB,EAAK;MACvC,OACEN,IAAA,CAACL,gBAAgB;QAAiBY,OAAO,EAAE,SAAAA,QAAA;UAAA,IAAAC,YAAA;UAAA,OAAMZ,OAAO,CAACa,OAAO,EAAAD,YAAA,GAACF,MAAM,CAACI,IAAI,YAAAF,YAAA,GAAG,EAAE,CAAC;QAAA,CAAC;QAAAG,QAAA,EACjFX,IAAA,CAACH,eAAe;UAACe,MAAM,EAAE;YAAEC,GAAG,EAAEP,MAAM,CAACQ;UAAS,CAAE;UAACC,KAAK,EAAEC,MAAM,CAACC,GAAI;UAAAN,QAAA,EACnET,KAAA,CAACX,IAAI;YAACwB,KAAK,EAAEC,MAAM,CAACE,aAAc;YAAAP,QAAA,GAChCX,IAAA,CAACR,IAAI;cAACuB,KAAK,EAAEC,MAAM,CAACG,KAAM;cAAAR,QAAA,EAAEL,MAAM,CAACa;YAAK,CAAO,CAAC,EAChDnB,IAAA,CAACT,IAAI;cAACwB,KAAK,EAAEC,MAAM,CAACI,eAAgB;cAAAT,QAAA,EAClCX,IAAA,CAACR,IAAI;gBAACuB,KAAK,EAAEC,MAAM,CAACK,UAAW;gBAAAV,QAAA,EAAEL,MAAM,CAACgB;cAAS,CAAO;YAAC,CACrD,CAAC;UAAA,CACH;QAAC,CACQ;MAAC,GARGhB,MAAM,CAACiB,EASZ,CAAC;IAEvB,CAAC,CAAC;EACJ,CAAC;EAED,OAAOvB,IAAA,CAACN,UAAU;IAAC8B,qBAAqB,EAAER,MAAM,CAACS,SAAU;IAAAd,QAAA,EAAEP,aAAa,CAAC;EAAC,CAAa,CAAC;AAC5F,CAAC;AAED,IAAMY,MAAM,GAAGvB,UAAU,CAACiC,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,OAAO,EAAE;EACX,CAAC;EACDV,GAAG,EAAE;IACHW,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAC;MAAEL,MAAM,EAAE;IAAE,CAAC;IACrCM,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDlB,aAAa,EAAE;IACbmB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,YAAY;IACxBC,eAAe,EAAE,iBAAiB;IAClCb,OAAO,EAAE,EAAE;IACXE,YAAY,EAAE;EAChB,CAAC;EACDV,KAAK,EAAE;IACLsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACDvB,eAAe,EAAE;IACfwB,SAAS,EAAE,UAAU;IACrBJ,eAAe,EAAE,MAAM;IACvBX,YAAY,EAAE,CAAC;IACfgB,eAAe,EAAE,CAAC;IAClBC,iBAAiB,EAAE;EACrB,CAAC;EACDzB,UAAU,EAAE;IACVoB,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAexC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}