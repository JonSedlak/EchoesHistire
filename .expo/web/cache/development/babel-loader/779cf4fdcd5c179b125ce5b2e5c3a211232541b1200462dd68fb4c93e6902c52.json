{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Gallery from \"../components/Gallery\";\nimport { useData, useTheme } from \"../hooks/\";\nimport { Block, Button, Text } from \"../components/\";\nimport { calculateDistance } from \"../utils/helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GalleryScreen = function GalleryScreen(_ref) {\n  var navigation = _ref.navigation;\n  var data = useData();\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    galleries = _useState4[0],\n    setGalleries = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    categories = _useState6[0],\n    setCategories = _useState6[1];\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors,\n    gradients = _useTheme.gradients,\n    sizes = _useTheme.sizes;\n  useEffect(function () {\n    setGalleries(data == null ? void 0 : data.galleries);\n    setCategories(data == null ? void 0 : data.categories);\n    setSelected(data == null ? void 0 : data.categories[0]);\n  }, [data.galleries, data.categories]);\n  useEffect(function () {\n    var _data$categories, _data$galleries;\n    var category = data == null ? void 0 : (_data$categories = data.categories) == null ? void 0 : _data$categories.find(function (category) {\n      return (category == null ? void 0 : category.id) === (selected == null ? void 0 : selected.id);\n    });\n    var newGalleries = data == null ? void 0 : (_data$galleries = data.galleries) == null ? void 0 : _data$galleries.filter(function (gallery) {\n      var _gallery$category;\n      return (gallery == null ? void 0 : (_gallery$category = gallery.category) == null ? void 0 : _gallery$category.id) === (category == null ? void 0 : category.id);\n    });\n    setGalleries(newGalleries);\n  }, [data, selected, setGalleries]);\n  var handlePress = function handlePress(gallery) {\n    var location = gallery.location;\n    if ((selected == null ? void 0 : selected.id) === 1 && location) {\n      var sortedGalleries = galleries.map(function (g) {\n        return _objectSpread(_objectSpread({}, g), {}, {\n          distance: calculateDistance(location, g.location)\n        });\n      }).sort(function (a, b) {\n        return a.distance - b.distance;\n      });\n      navigation.navigate('ARmap', {\n        gallery: sortedGalleries[0]\n      });\n    } else {\n      navigation.navigate('ARmap', {\n        gallery: gallery\n      });\n    }\n  };\n  return _jsxs(Block, {\n    children: [_jsx(Block, {\n      color: colors.card,\n      row: true,\n      flex: 0,\n      paddingVertical: sizes.padding,\n      children: _jsx(Block, {\n        scroll: true,\n        horizontal: true,\n        renderToHardwareTextureAndroid: true,\n        showsHorizontalScrollIndicator: false,\n        contentOffset: {\n          x: -sizes.padding,\n          y: 0\n        },\n        children: categories == null ? void 0 : categories.map(function (category) {\n          var isSelected = (category == null ? void 0 : category.id) === (selected == null ? void 0 : selected.id);\n          return _jsx(Button, {\n            radius: sizes.m,\n            marginHorizontal: sizes.s,\n            onPress: function onPress() {\n              return setSelected(category);\n            },\n            gradient: gradients == null ? void 0 : gradients[isSelected ? 'primary' : 'light'],\n            children: _jsx(Text, {\n              p: true,\n              bold: isSelected,\n              white: isSelected,\n              black: !isSelected,\n              marginHorizontal: sizes.m,\n              children: category == null ? void 0 : category.name\n            })\n          }, \"category-\" + (category == null ? void 0 : category.id) + \"}\");\n        })\n      })\n    }), _jsx(FlatList, {\n      data: galleries,\n      showsVerticalScrollIndicator: false,\n      keyExtractor: function keyExtractor(item) {\n        return \"\" + (item == null ? void 0 : item.id);\n      },\n      style: {\n        paddingHorizontal: sizes.padding\n      },\n      contentContainerStyle: {\n        paddingBottom: sizes.l\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(Gallery, _objectSpread(_objectSpread({}, item), {}, {\n          onPress: function onPress() {\n            return handlePress(item);\n          }\n        }));\n      }\n    })]\n  });\n};\nexport default GalleryScreen;","map":{"version":3,"names":["React","useEffect","useState","FlatList","Gallery","useData","useTheme","Block","Button","Text","calculateDistance","jsx","_jsx","jsxs","_jsxs","GalleryScreen","_ref","navigation","data","_useState","_useState2","_slicedToArray","selected","setSelected","_useState3","_useState4","galleries","setGalleries","_useState5","_useState6","categories","setCategories","_useTheme","colors","gradients","sizes","_data$categories","_data$galleries","category","find","id","newGalleries","filter","gallery","_gallery$category","handlePress","location","sortedGalleries","map","g","_objectSpread","distance","sort","a","b","navigate","children","color","card","row","flex","paddingVertical","padding","scroll","horizontal","renderToHardwareTextureAndroid","showsHorizontalScrollIndicator","contentOffset","x","y","isSelected","radius","m","marginHorizontal","s","onPress","gradient","p","bold","white","black","name","showsVerticalScrollIndicator","keyExtractor","item","style","paddingHorizontal","contentContainerStyle","paddingBottom","l","renderItem","_ref2"],"sources":["/Users/felipebassi/Documents/VAR-Labs-App/Behrend-Immersive-App/src/screens/Gallery.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { FlatList } from 'react-native';\nimport Gallery from '../components/Gallery';\nimport { useData, useTheme } from '../hooks/';\nimport { IGallery, ICategory } from '../constants/types';\nimport { Block, Button, Text } from '../components/';\nimport { NavigationProp } from '@react-navigation/native';\nimport { calculateDistance } from '../utils/helpers';\n\n\ninterface GalleryScreenProps {\n  navigation: NavigationProp<Record<string, object | undefined>>;\n}\n\nconst GalleryScreen = ({ navigation }: GalleryScreenProps) => {\n  const data = useData();\n  const [selected, setSelected] = useState<ICategory>();\n  const [galleries, setGalleries] = useState<IGallery[]>([]);\n  const [categories, setCategories] = useState<ICategory[]>([]);\n  const { colors, gradients, sizes } = useTheme();\n\n  // init galleries\n  useEffect(() => {\n    setGalleries(data?.galleries);\n    setCategories(data?.categories);\n    setSelected(data?.categories[0]);\n  }, [data.galleries, data.categories]);\n\n  // update galleries on category change\n  useEffect(() => {\n    const category = data?.categories?.find(\n      (category) => category?.id === selected?.id,\n    );\n\n    const newGalleries = data?.galleries?.filter(\n      (gallery) => gallery?.category?.id === category?.id,\n    );\n\n    setGalleries(newGalleries);\n  }, [data, selected, setGalleries]);\n\n  const handlePress = (gallery: IGallery) => {\n    const location = gallery.location;\n    if (selected?.id === 1 && location) {\n      const sortedGalleries = galleries\n        .map((g) => ({ ...g, distance: calculateDistance(location!, g.location!) }))\n        .sort((a, b) => a.distance - b.distance);\n      navigation.navigate('ARmap', { gallery: sortedGalleries[0] });\n    } else {\n      navigation.navigate('ARmap', { gallery });\n    }\n  };\n  \n  \n\n  return (\n    <Block>\n      {/* categories list */}\n      <Block color={colors.card} row flex={0} paddingVertical={sizes.padding}>\n        <Block\n          scroll\n          horizontal\n          renderToHardwareTextureAndroid\n          showsHorizontalScrollIndicator={false}\n          contentOffset={{ x: -sizes.padding, y: 0 }}>\n          {categories?.map((category) => {\n            const isSelected = category?.id === selected?.id;\n            return (\n              <Button\n                radius={sizes.m}\n                marginHorizontal={sizes.s}\n                key={`category-${category?.id}}`}\n                onPress={() => setSelected(category)}\n                gradient={gradients?.[isSelected ? 'primary' : 'light']}>\n                <Text\n                  p\n                  bold={isSelected}\n                  white={isSelected}\n                  black={!isSelected}\n                  marginHorizontal={sizes.m}>\n                  {category?.name}\n                </Text>\n              </Button>\n            );\n          })}\n        </Block>\n      </Block>\n\n      <FlatList\n        data={galleries}\n        showsVerticalScrollIndicator={false}\n        keyExtractor={(item) => `${item?.id}`}\n        style={{ paddingHorizontal: sizes.padding }}\n        contentContainerStyle={{ paddingBottom: sizes.l }}\n        renderItem={({ item }) => (\n          <Gallery {...item} onPress={() => handlePress(item)} />\n        )}\n      />\n    </Block>\n  );\n};\n\nexport default GalleryScreen;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAEnD,OAAOC,OAAO;AACd,SAASC,OAAO,EAAEC,QAAQ;AAE1B,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI;AAE5B,SAASC,iBAAiB;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAOrD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAA2C;EAAA,IAArCC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACjC,IAAMC,IAAI,GAAGb,OAAO,CAAC,CAAC;EACtB,IAAAc,SAAA,GAAgCjB,QAAQ,CAAY,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAkCtB,QAAQ,CAAa,EAAE,CAAC;IAAAuB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAnDE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAoC1B,QAAQ,CAAc,EAAE,CAAC;IAAA2B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAtDE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAChC,IAAAG,SAAA,GAAqC1B,QAAQ,CAAC,CAAC;IAAvC2B,MAAM,GAAAD,SAAA,CAANC,MAAM;IAAEC,SAAS,GAAAF,SAAA,CAATE,SAAS;IAAEC,KAAK,GAAAH,SAAA,CAALG,KAAK;EAGhClC,SAAS,CAAC,YAAM;IACd0B,YAAY,CAACT,IAAI,oBAAJA,IAAI,CAAEQ,SAAS,CAAC;IAC7BK,aAAa,CAACb,IAAI,oBAAJA,IAAI,CAAEY,UAAU,CAAC;IAC/BP,WAAW,CAACL,IAAI,oBAAJA,IAAI,CAAEY,UAAU,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACZ,IAAI,CAACQ,SAAS,EAAER,IAAI,CAACY,UAAU,CAAC,CAAC;EAGrC7B,SAAS,CAAC,YAAM;IAAA,IAAAmC,gBAAA,EAAAC,eAAA;IACd,IAAMC,QAAQ,GAAGpB,IAAI,qBAAAkB,gBAAA,GAAJlB,IAAI,CAAEY,UAAU,qBAAhBM,gBAAA,CAAkBG,IAAI,CACrC,UAACD,QAAQ;MAAA,OAAK,CAAAA,QAAQ,oBAARA,QAAQ,CAAEE,EAAE,OAAKlB,QAAQ,oBAARA,QAAQ,CAAEkB,EAAE;IAAA,CAC7C,CAAC;IAED,IAAMC,YAAY,GAAGvB,IAAI,qBAAAmB,eAAA,GAAJnB,IAAI,CAAEQ,SAAS,qBAAfW,eAAA,CAAiBK,MAAM,CAC1C,UAACC,OAAO;MAAA,IAAAC,iBAAA;MAAA,OAAK,CAAAD,OAAO,qBAAAC,iBAAA,GAAPD,OAAO,CAAEL,QAAQ,qBAAjBM,iBAAA,CAAmBJ,EAAE,OAAKF,QAAQ,oBAARA,QAAQ,CAAEE,EAAE;IAAA,CACrD,CAAC;IAEDb,YAAY,CAACc,YAAY,CAAC;EAC5B,CAAC,EAAE,CAACvB,IAAI,EAAEI,QAAQ,EAAEK,YAAY,CAAC,CAAC;EAElC,IAAMkB,WAAW,GAAG,SAAdA,WAAWA,CAAIF,OAAiB,EAAK;IACzC,IAAMG,QAAQ,GAAGH,OAAO,CAACG,QAAQ;IACjC,IAAI,CAAAxB,QAAQ,oBAARA,QAAQ,CAAEkB,EAAE,MAAK,CAAC,IAAIM,QAAQ,EAAE;MAClC,IAAMC,eAAe,GAAGrB,SAAS,CAC9BsB,GAAG,CAAC,UAACC,CAAC;QAAA,OAAAC,aAAA,CAAAA,aAAA,KAAWD,CAAC;UAAEE,QAAQ,EAAEzC,iBAAiB,CAACoC,QAAQ,EAAGG,CAAC,CAACH,QAAS;QAAC;MAAA,CAAG,CAAC,CAC3EM,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;QAAA,OAAKD,CAAC,CAACF,QAAQ,GAAGG,CAAC,CAACH,QAAQ;MAAA,EAAC;MAC1ClC,UAAU,CAACsC,QAAQ,CAAC,OAAO,EAAE;QAAEZ,OAAO,EAAEI,eAAe,CAAC,CAAC;MAAE,CAAC,CAAC;IAC/D,CAAC,MAAM;MACL9B,UAAU,CAACsC,QAAQ,CAAC,OAAO,EAAE;QAAEZ,OAAO,EAAPA;MAAQ,CAAC,CAAC;IAC3C;EACF,CAAC;EAID,OACE7B,KAAA,CAACP,KAAK;IAAAiD,QAAA,GAEJ5C,IAAA,CAACL,KAAK;MAACkD,KAAK,EAAExB,MAAM,CAACyB,IAAK;MAACC,GAAG;MAACC,IAAI,EAAE,CAAE;MAACC,eAAe,EAAE1B,KAAK,CAAC2B,OAAQ;MAAAN,QAAA,EACrE5C,IAAA,CAACL,KAAK;QACJwD,MAAM;QACNC,UAAU;QACVC,8BAA8B;QAC9BC,8BAA8B,EAAE,KAAM;QACtCC,aAAa,EAAE;UAAEC,CAAC,EAAE,CAACjC,KAAK,CAAC2B,OAAO;UAAEO,CAAC,EAAE;QAAE,CAAE;QAAAb,QAAA,EAC1C1B,UAAU,oBAAVA,UAAU,CAAEkB,GAAG,CAAC,UAACV,QAAQ,EAAK;UAC7B,IAAMgC,UAAU,GAAG,CAAAhC,QAAQ,oBAARA,QAAQ,CAAEE,EAAE,OAAKlB,QAAQ,oBAARA,QAAQ,CAAEkB,EAAE;UAChD,OACE5B,IAAA,CAACJ,MAAM;YACL+D,MAAM,EAAEpC,KAAK,CAACqC,CAAE;YAChBC,gBAAgB,EAAEtC,KAAK,CAACuC,CAAE;YAE1BC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMpD,WAAW,CAACe,QAAQ,CAAC;YAAA,CAAC;YACrCsC,QAAQ,EAAE1C,SAAS,oBAATA,SAAS,CAAGoC,UAAU,GAAG,SAAS,GAAG,OAAO,CAAE;YAAAd,QAAA,EACxD5C,IAAA,CAACH,IAAI;cACHoE,CAAC;cACDC,IAAI,EAAER,UAAW;cACjBS,KAAK,EAAET,UAAW;cAClBU,KAAK,EAAE,CAACV,UAAW;cACnBG,gBAAgB,EAAEtC,KAAK,CAACqC,CAAE;cAAAhB,QAAA,EACzBlB,QAAQ,oBAARA,QAAQ,CAAE2C;YAAI,CACX;UAAC,kBAVU3C,QAAQ,oBAARA,QAAQ,CAAEE,EAAE,OAWvB,CAAC;QAEb,CAAC;MAAC,CACG;IAAC,CACH,CAAC,EAER5B,IAAA,CAACT,QAAQ;MACPe,IAAI,EAAEQ,SAAU;MAChBwD,4BAA4B,EAAE,KAAM;MACpCC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,aAAQA,IAAI,oBAAJA,IAAI,CAAE5C,EAAE;MAAA,CAAG;MACtC6C,KAAK,EAAE;QAAEC,iBAAiB,EAAEnD,KAAK,CAAC2B;MAAQ,CAAE;MAC5CyB,qBAAqB,EAAE;QAAEC,aAAa,EAAErD,KAAK,CAACsD;MAAE,CAAE;MAClDC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGP,IAAI,GAAAO,KAAA,CAAJP,IAAI;QAAA,OACjBxE,IAAA,CAACR,OAAO,EAAA8C,aAAA,CAAAA,aAAA,KAAKkC,IAAI;UAAET,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM9B,WAAW,CAACuC,IAAI,CAAC;UAAA;QAAC,EAAE,CAAC;MAAA;IACvD,CACH,CAAC;EAAA,CACG,CAAC;AAEZ,CAAC;AAED,eAAerE,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}